{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww11900\viewh13180\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs26 \cf0 class Model\
/* This is the model class for the Connect 4 game. It maintains the number of tokens left to play, the \
game board, the currently active player, and the names and colors of the players. \
*/\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
get_token_count(): int\
/*return the value of token_count\
*/\
1. test_get_token_count\
Check that token_count equals the returned value after setting token_count to\
two different values\
\
\
decrement_token_count(): None\
/*decreases the token_count by 1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 */\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 1. test_decrement_token_count\
Check that the function subtracts one form the token_count.\
\
\
place_token(int, str): boolean\
/*\
Adds token passed in into the column that\'92s passed in. Return False (unsuccessful operation) if the selected column is full, otherwise return True. Raises an invalid arg exception when called with an invalid arg. Int is btw 0 and 6 and str has to be either \'93r\'94 or \'93b\'94.\
*/\
\
1.  test_place_token_full_column\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 Set up game_board to have a full column. Check that token is  NOT added to this column, and that False is returned.\
\
2.  test_place_token_non_full_column\
Set up game_board to have a non full column. Check that token is  added to this column, and that True is returned. \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
3. test_place_token_invalid_arg\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 Check if function raises an invalid arg exception when called with a invalid string and/or int arg\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
get_player(int): list \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 /*\
returns a tuple of name and color for the player in the players data structure. If the arg passed in is an int but doesn\'92t point to a player, then it raises an index error exception. If arg passed in is not int then will raise an invalid arg exception \
*/ \
\
1. test_get_existing_player\
Set up players with given known content and check if the function returns the known content that the arg is pointing to\
\
2. test_get_non_existing_player\
Set up players with given known content and check if the function raises an index error exception \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
3. test_get_player_invalid_arg\
Check if function raises an invalid arg exception when called with a string arg\
\
switch_active_player():\
/*\
this function switches the active player variable to the other player\
*/ \
1. test_switch_active_player_one\
Check the function changes the active_player attribute from 0 to 1\
\
2. test_switch_active_player_two\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 Check the function changes the active_player attribute from 1 to 0\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
get_active_player(): int \
/*\
Return the value of active_player\
*/\
1. test_active_player\
check that the return value is equal to the value of the active_player with more than one value\
\
\
\
\
}